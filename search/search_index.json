{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Home Introduction PhEval - Phenotypic Inference Evaluation Framework Quick links: GitHub page","title":"Home"},{"location":"#home","text":"","title":"Home"},{"location":"#introduction","text":"PhEval - Phenotypic Inference Evaluation Framework Quick links: GitHub page","title":"Introduction"},{"location":"CODE_OF_CONDUCT/","text":"Contributor Covenant Code of Conduct Our Pledge In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to make participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation. Our Standards Examples of behavior that contributes to creating a positive environment include: Using welcoming and inclusive language Being respectful of differing viewpoints and experiences Gracefully accepting constructive criticism Focusing on what is best for the community Showing empathy towards other community members Examples of unacceptable behavior by participants include: The use of sexualized language or imagery and unwelcome sexual attention or advances Trolling, insulting/derogatory comments, and personal or political attacks Public or private harassment Publishing others' private information, such as a physical or electronic address, without explicit permission Other conduct which could reasonably be considered inappropriate in a professional setting Our Responsibilities Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior. Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful. Scope This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers. Enforcement Instances of abusive, harassing, or otherwise unacceptable behavior. All complaints will be reviewed and investigated and will result in a response that is deemed necessary and appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately. Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership. Attribution This code of conduct has been derived from the excellent code of conduct of the ATOM project which in turn is adapted from the Contributor Covenant , version 1.4, available at https://contributor-covenant.org/version/1/4","title":"Contributor Covenant Code of Conduct"},{"location":"CODE_OF_CONDUCT/#contributor-covenant-code-of-conduct","text":"","title":"Contributor Covenant Code of Conduct"},{"location":"CODE_OF_CONDUCT/#our-pledge","text":"In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to make participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.","title":"Our Pledge"},{"location":"CODE_OF_CONDUCT/#our-standards","text":"Examples of behavior that contributes to creating a positive environment include: Using welcoming and inclusive language Being respectful of differing viewpoints and experiences Gracefully accepting constructive criticism Focusing on what is best for the community Showing empathy towards other community members Examples of unacceptable behavior by participants include: The use of sexualized language or imagery and unwelcome sexual attention or advances Trolling, insulting/derogatory comments, and personal or political attacks Public or private harassment Publishing others' private information, such as a physical or electronic address, without explicit permission Other conduct which could reasonably be considered inappropriate in a professional setting","title":"Our Standards"},{"location":"CODE_OF_CONDUCT/#our-responsibilities","text":"Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior. Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.","title":"Our Responsibilities"},{"location":"CODE_OF_CONDUCT/#scope","text":"This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.","title":"Scope"},{"location":"CODE_OF_CONDUCT/#enforcement","text":"Instances of abusive, harassing, or otherwise unacceptable behavior. All complaints will be reviewed and investigated and will result in a response that is deemed necessary and appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately. Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.","title":"Enforcement"},{"location":"CODE_OF_CONDUCT/#attribution","text":"This code of conduct has been derived from the excellent code of conduct of the ATOM project which in turn is adapted from the Contributor Covenant , version 1.4, available at https://contributor-covenant.org/version/1/4","title":"Attribution"},{"location":"about/","text":"PhEval - Phenotypic Inference Evaluation Framework There is currently no empirical framework to evaluate the performance of phenotype matching and prioritization tools, much needed to guide tuning for cross species inference. Many algorithms are evaluated using simulations, which may fail to capture real-world scenarios. This gap presents a number of problems: it is difficult to optimize algorithms if we do not know which choices lead to better results; performance may be sensitive to factors that are subject to change, such as ontology structure or annotation completeness. We will develop a modular Phenotypic Inference Evaluation Framework, PhEval and use it to optimize our own algorithms, as well as deliver it as a community resource.","title":"About"},{"location":"about/#pheval-phenotypic-inference-evaluation-framework","text":"There is currently no empirical framework to evaluate the performance of phenotype matching and prioritization tools, much needed to guide tuning for cross species inference. Many algorithms are evaluated using simulations, which may fail to capture real-world scenarios. This gap presents a number of problems: it is difficult to optimize algorithms if we do not know which choices lead to better results; performance may be sensitive to factors that are subject to change, such as ontology structure or annotation completeness. We will develop a modular Phenotypic Inference Evaluation Framework, PhEval and use it to optimize our own algorithms, as well as deliver it as a community resource.","title":"PhEval - Phenotypic Inference Evaluation Framework"},{"location":"contact/","text":"Contact The preferred way to contact the PhEval team is through the issue tracker (for problems with PhEval) or the GitHub discussions (for general questions). You can find any of the members of the PhEval core team on GitHub: https://github.com/orgs/monarch-initiative/teams/pheval-team Their GitHub profiles usually also provide email addresses.","title":"Contact Us"},{"location":"contact/#contact","text":"The preferred way to contact the PhEval team is through the issue tracker (for problems with PhEval) or the GitHub discussions (for general questions). You can find any of the members of the PhEval core team on GitHub: https://github.com/orgs/monarch-initiative/teams/pheval-team Their GitHub profiles usually also provide email addresses.","title":"Contact"},{"location":"contributing/","text":"Contributing to PhEval First of all: Thank you for taking the time to contribute! The following is a set of guidelines for contributing to monarch-technical-documentation. These guidelines are not strict rules. Use your best judgment, and feel free to propose changes to this document in a pull request. Table Of Contents Contributing to PhEval Table Of Contents Code of Conduct Guidelines for Contributions and Requests Reporting problems with the data model Code of Conduct The monarch-technical-documentation team strives to create a welcoming environment for editors, users and other contributors. Please carefully read our Code of Conduct . Guidelines for Contributions and Requests Reporting problems with the data model Please use our Issue Tracker for reporting problems with the ontology.","title":"Contributing to PhEval"},{"location":"contributing/#contributing-to-pheval","text":"First of all: Thank you for taking the time to contribute! The following is a set of guidelines for contributing to monarch-technical-documentation. These guidelines are not strict rules. Use your best judgment, and feel free to propose changes to this document in a pull request.","title":"Contributing to PhEval"},{"location":"contributing/#table-of-contents","text":"Contributing to PhEval Table Of Contents Code of Conduct Guidelines for Contributions and Requests Reporting problems with the data model","title":"Table Of Contents"},{"location":"contributing/#code-of-conduct","text":"The monarch-technical-documentation team strives to create a welcoming environment for editors, users and other contributors. Please carefully read our Code of Conduct .","title":"Code of Conduct"},{"location":"contributing/#guidelines-for-contributions-and-requests","text":"","title":"Guidelines for Contributions and Requests"},{"location":"contributing/#reporting-problems-with-the-data-model","text":"Please use our Issue Tracker for reporting problems with the ontology.","title":"Reporting problems with the data model"},{"location":"developing_a_pheval_plugin/","text":"Developing a PhEval Plugin","title":"Developing a PhEval Plugin"},{"location":"developing_a_pheval_plugin/#developing-a-pheval-plugin","text":"","title":"Developing a PhEval Plugin"},{"location":"roadmap/","text":"Roadmap PhEval CLI PhEval Exomiser Integration PhEval Utils Implementation","title":"Roadmap"},{"location":"roadmap/#roadmap","text":"PhEval CLI PhEval Exomiser Integration PhEval Utils Implementation","title":"Roadmap"},{"location":"styleguide/","text":"Monarch Style Guide for PhEval No code in CLI methods","title":"Monarch Style Guide for PhEval"},{"location":"styleguide/#monarch-style-guide-for-pheval","text":"No code in CLI methods","title":"Monarch Style Guide for PhEval"},{"location":"api/pheval/cli/","text":"PhEval CLI Module main ( verbose = 1 , quiet = False ) main CLI method for PhEval Parameters: Name Type Description Default verbose int Verbose flag 1 quiet bool Queit Flag. False Source code in src/pheval/cli.py 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 @click . group () @click . option ( \"-v\" , \"--verbose\" , count = True ) @click . option ( \"-q\" , \"--quiet\" ) def main ( verbose = 1 , quiet = False ) -> None : \"\"\"main CLI method for PhEval Args: verbose (int, optional): Verbose flag . quiet (bool, optional): Queit Flag. \"\"\" if verbose >= 2 : info_log . setLevel ( level = logging . DEBUG ) elif verbose == 1 : info_log . setLevel ( level = logging . INFO ) else : info_log . setLevel ( level = logging . WARNING ) if quiet : info_log . setLevel ( level = logging . ERROR ) pheval () pheval Source code in src/pheval/cli.py 41 42 43 @click . group () def pheval (): \"\"\"pheval\"\"\" pheval_utils () pheval_utils Source code in src/pheval/cli.py 46 47 48 @click . group () def pheval_utils (): \"\"\"pheval_utils\"\"\"","title":"Cli"},{"location":"api/pheval/cli/#src.pheval.cli.main","text":"main CLI method for PhEval Parameters: Name Type Description Default verbose int Verbose flag 1 quiet bool Queit Flag. False Source code in src/pheval/cli.py 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 @click . group () @click . option ( \"-v\" , \"--verbose\" , count = True ) @click . option ( \"-q\" , \"--quiet\" ) def main ( verbose = 1 , quiet = False ) -> None : \"\"\"main CLI method for PhEval Args: verbose (int, optional): Verbose flag . quiet (bool, optional): Queit Flag. \"\"\" if verbose >= 2 : info_log . setLevel ( level = logging . DEBUG ) elif verbose == 1 : info_log . setLevel ( level = logging . INFO ) else : info_log . setLevel ( level = logging . WARNING ) if quiet : info_log . setLevel ( level = logging . ERROR )","title":"main()"},{"location":"api/pheval/cli/#src.pheval.cli.pheval","text":"pheval Source code in src/pheval/cli.py 41 42 43 @click . group () def pheval (): \"\"\"pheval\"\"\"","title":"pheval()"},{"location":"api/pheval/cli/#src.pheval.cli.pheval_utils","text":"pheval_utils Source code in src/pheval/cli.py 46 47 48 @click . group () def pheval_utils (): \"\"\"pheval_utils\"\"\"","title":"pheval_utils()"},{"location":"api/pheval/cli_pheval/","text":"Monarch Initiative run ( inputdir , testdatadir , runner , tmpdir , outputdir , config ) PhEval Runner Command Line Interface Parameters: Name Type Description Default inputdir click . Path The input directory (relative path: e.g exomiser-13.11) required testdatadir click . Path The input directory (relative path: e.g ./data required runner str Runner implementation (e.g exomiser-13.11) required tmpdir click . Path The path of the temporary directory (optional) required outputdir click . Path The path of the output directory required config click . Path The path of the configuration file (optional e.g config.yaml) required Source code in src/pheval/cli_pheval.py 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 @click . command () @click . option ( \"--inputdir\" , \"-i\" , metavar = \"INPUTDIR\" , required = True , help = \"The input directory (relative path: e.g exomiser-13.11)\" , ) @click . option ( \"--testdatadir\" , \"-t\" , metavar = \"TESTDATA\" , required = True , help = \"The input directory (relative path: e.g ./data)\" , ) @click . option ( \"--runner\" , \"-r\" , metavar = \"RUNNER\" , required = True , help = \"Runner implementation (e.g exomiser-13.11)\" , ) @click . option ( \"--tmpdir\" , \"-m\" , metavar = \"TMPDIR\" , required = False , help = \"The path of the temporary directory (optional)\" , ) @click . option ( \"--outputdir\" , \"-o\" , metavar = \"OUTPUTDIR\" , required = True , help = \"The path of the output directory\" , ) @click . option ( \"--config\" , \"-c\" , metavar = \"CONFIG\" , required = False , help = \"The path of the configuration file (optional e.g config.yaml)\" , ) def run ( inputdir : click . Path , testdatadir : click . Path , runner : str , tmpdir : click . Path , outputdir : click . Path , config : click . Path , ) -> None : \"\"\"PhEval Runner Command Line Interface Args: inputdir (click.Path): The input directory (relative path: e.g exomiser-13.11) testdatadir (click.Path): The input directory (relative path: e.g ./data runner (str): Runner implementation (e.g exomiser-13.11) tmpdir (click.Path): The path of the temporary directory (optional) outputdir (click.Path): The path of the output directory config (click.Path): The path of the configuration file (optional e.g config.yaml) \"\"\" runner_class = get_implementation_resolver () . lookup ( runner ) runner_instance = runner_class ( inputdir , testdatadir , tmpdir , outputdir , config ) runner_instance . prepare () runner_instance . run () runner_instance . post_process ()","title":"Cli pheval"},{"location":"api/pheval/cli_pheval/#src.pheval.cli_pheval.run","text":"PhEval Runner Command Line Interface Parameters: Name Type Description Default inputdir click . Path The input directory (relative path: e.g exomiser-13.11) required testdatadir click . Path The input directory (relative path: e.g ./data required runner str Runner implementation (e.g exomiser-13.11) required tmpdir click . Path The path of the temporary directory (optional) required outputdir click . Path The path of the output directory required config click . Path The path of the configuration file (optional e.g config.yaml) required Source code in src/pheval/cli_pheval.py 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 @click . command () @click . option ( \"--inputdir\" , \"-i\" , metavar = \"INPUTDIR\" , required = True , help = \"The input directory (relative path: e.g exomiser-13.11)\" , ) @click . option ( \"--testdatadir\" , \"-t\" , metavar = \"TESTDATA\" , required = True , help = \"The input directory (relative path: e.g ./data)\" , ) @click . option ( \"--runner\" , \"-r\" , metavar = \"RUNNER\" , required = True , help = \"Runner implementation (e.g exomiser-13.11)\" , ) @click . option ( \"--tmpdir\" , \"-m\" , metavar = \"TMPDIR\" , required = False , help = \"The path of the temporary directory (optional)\" , ) @click . option ( \"--outputdir\" , \"-o\" , metavar = \"OUTPUTDIR\" , required = True , help = \"The path of the output directory\" , ) @click . option ( \"--config\" , \"-c\" , metavar = \"CONFIG\" , required = False , help = \"The path of the configuration file (optional e.g config.yaml)\" , ) def run ( inputdir : click . Path , testdatadir : click . Path , runner : str , tmpdir : click . Path , outputdir : click . Path , config : click . Path , ) -> None : \"\"\"PhEval Runner Command Line Interface Args: inputdir (click.Path): The input directory (relative path: e.g exomiser-13.11) testdatadir (click.Path): The input directory (relative path: e.g ./data runner (str): Runner implementation (e.g exomiser-13.11) tmpdir (click.Path): The path of the temporary directory (optional) outputdir (click.Path): The path of the output directory config (click.Path): The path of the configuration file (optional e.g config.yaml) \"\"\" runner_class = get_implementation_resolver () . lookup ( runner ) runner_instance = runner_class ( inputdir , testdatadir , tmpdir , outputdir , config ) runner_instance . prepare () runner_instance . run () runner_instance . post_process ()","title":"run()"},{"location":"api/pheval/cli_pheval_utils/","text":"PhEval utils Command Line Interface scramble_phenopacket () scramble_phenopacket Source code in src/pheval/cli_pheval_utils.py 19 20 21 22 23 24 25 26 27 28 29 @click . command () @click . option ( \"--input\" , \"-i\" , required = True , metavar = \"FILE\" , help = \"Path to the phenopacket to be spiked.\" , ) def scramble_phenopacket (): \"\"\"scramble_phenopacket\"\"\" print ( \"running pheval_utils::scramble_phenopacket command\" ) scramble_semsim () scramble_semsim Source code in src/pheval/cli_pheval_utils.py 6 7 8 9 10 11 12 13 14 15 16 @click . command () @click . option ( \"--input\" , \"-i\" , required = True , metavar = \"FILE\" , help = \"Path to the semantic similarity profile to be scrambled.\" , ) def scramble_semsim (): \"\"\"scramble_semsim\"\"\" print ( \"running pheval_utils::scramble_semsim command\" )","title":"Cli pheval utils"},{"location":"api/pheval/cli_pheval_utils/#src.pheval.cli_pheval_utils.scramble_phenopacket","text":"scramble_phenopacket Source code in src/pheval/cli_pheval_utils.py 19 20 21 22 23 24 25 26 27 28 29 @click . command () @click . option ( \"--input\" , \"-i\" , required = True , metavar = \"FILE\" , help = \"Path to the phenopacket to be spiked.\" , ) def scramble_phenopacket (): \"\"\"scramble_phenopacket\"\"\" print ( \"running pheval_utils::scramble_phenopacket command\" )","title":"scramble_phenopacket()"},{"location":"api/pheval/cli_pheval_utils/#src.pheval.cli_pheval_utils.scramble_semsim","text":"scramble_semsim Source code in src/pheval/cli_pheval_utils.py 6 7 8 9 10 11 12 13 14 15 16 @click . command () @click . option ( \"--input\" , \"-i\" , required = True , metavar = \"FILE\" , help = \"Path to the semantic similarity profile to be scrambled.\" , ) def scramble_semsim (): \"\"\"scramble_semsim\"\"\" print ( \"running pheval_utils::scramble_semsim command\" )","title":"scramble_semsim()"},{"location":"api/pheval/utils/","text":"Contains all pheval utility methods","title":"Utils"},{"location":"api/pheval/runners/runner/","text":"Runners Module DefaultPhEvalRunner Bases: PhEvalRunner DefaultPhEvalRunner Parameters: Name Type Description Default PhEvalRunner PhEvalRunner Abstract PhEvalRunnerClass required Source code in src/pheval/runners/runner.py 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 class DefaultPhEvalRunner ( PhEvalRunner ): \"\"\"DefaultPhEvalRunner Args: PhEvalRunner (PhEvalRunner): Abstract PhEvalRunnerClass \"\"\" inputdir : click . Path testdatadir : click . Path tmpdir : click . Path outputdir : click . Path config : click . Path def prepare ( self ): print ( \"preparing\" ) def run ( self ): print ( \"running\" ) def post_process ( self ): print ( \"post processing\" ) PhEvalRunner dataclass Bases: ABC PhEvalRunner Class Source code in src/pheval/runners/runner.py 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 @dataclass class PhEvalRunner ( ABC ): \"\"\"PhEvalRunner Class\"\"\" inputdir : click . Path testdatadir : click . Path tmpdir : click . Path outputdir : click . Path config : click . Path @abstractmethod def prepare ( self ) -> str : \"\"\"prepare\"\"\" @abstractmethod def run ( self ): \"\"\"run\"\"\" @abstractmethod def post_process ( self ): \"\"\"post_process\"\"\" post_process () abstractmethod post_process Source code in src/pheval/runners/runner.py 26 27 28 @abstractmethod def post_process ( self ): \"\"\"post_process\"\"\" prepare () abstractmethod prepare Source code in src/pheval/runners/runner.py 18 19 20 @abstractmethod def prepare ( self ) -> str : \"\"\"prepare\"\"\" run () abstractmethod run Source code in src/pheval/runners/runner.py 22 23 24 @abstractmethod def run ( self ): \"\"\"run\"\"\"","title":"Runner"},{"location":"api/pheval/runners/runner/#src.pheval.runners.runner.DefaultPhEvalRunner","text":"Bases: PhEvalRunner DefaultPhEvalRunner Parameters: Name Type Description Default PhEvalRunner PhEvalRunner Abstract PhEvalRunnerClass required Source code in src/pheval/runners/runner.py 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 class DefaultPhEvalRunner ( PhEvalRunner ): \"\"\"DefaultPhEvalRunner Args: PhEvalRunner (PhEvalRunner): Abstract PhEvalRunnerClass \"\"\" inputdir : click . Path testdatadir : click . Path tmpdir : click . Path outputdir : click . Path config : click . Path def prepare ( self ): print ( \"preparing\" ) def run ( self ): print ( \"running\" ) def post_process ( self ): print ( \"post processing\" )","title":"DefaultPhEvalRunner"},{"location":"api/pheval/runners/runner/#src.pheval.runners.runner.PhEvalRunner","text":"Bases: ABC PhEvalRunner Class Source code in src/pheval/runners/runner.py 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 @dataclass class PhEvalRunner ( ABC ): \"\"\"PhEvalRunner Class\"\"\" inputdir : click . Path testdatadir : click . Path tmpdir : click . Path outputdir : click . Path config : click . Path @abstractmethod def prepare ( self ) -> str : \"\"\"prepare\"\"\" @abstractmethod def run ( self ): \"\"\"run\"\"\" @abstractmethod def post_process ( self ): \"\"\"post_process\"\"\"","title":"PhEvalRunner"},{"location":"api/pheval/runners/runner/#src.pheval.runners.runner.PhEvalRunner.post_process","text":"post_process Source code in src/pheval/runners/runner.py 26 27 28 @abstractmethod def post_process ( self ): \"\"\"post_process\"\"\"","title":"post_process()"},{"location":"api/pheval/runners/runner/#src.pheval.runners.runner.PhEvalRunner.prepare","text":"prepare Source code in src/pheval/runners/runner.py 18 19 20 @abstractmethod def prepare ( self ) -> str : \"\"\"prepare\"\"\"","title":"prepare()"},{"location":"api/pheval/runners/runner/#src.pheval.runners.runner.PhEvalRunner.run","text":"run Source code in src/pheval/runners/runner.py 22 23 24 @abstractmethod def run ( self ): \"\"\"run\"\"\"","title":"run()"}]}