MAKEFLAGS 				+= --warn-undefined-variables
SHELL 					:= bash
.DEFAULT_GOAL			:= help
URIBASE					:=	http://purl.obolibrary.org/obo
TEST_DATA				:=	testdata
TMP_DATA				:=	{{ directories.tmp }}
NAME					:= $(shell python -c 'import tomli; print(tomli.load(open("pyproject.toml", "rb"))["tool"]["poetry"]["name"])')
VERSION					:= $(shell python -c 'import tomli; print(tomli.load(open("pyproject.toml", "rb"))["tool"]["poetry"]["version"])')
H2_JAR					:= {{ directories.h2jar }}
help: status
	@echo ""
	@echo "help"
	@echo "make pheval -- this runs the entire pipeline including corpus preparation and pheval run"
	@echo "make semsim -- generate all configured similarity profiles"
	@echo "make semsim-shuffle -- generate new ontology terms to the semsim process"
	@echo "make semsim-scramble -- scramble semsim profile"
	@echo "make semsim-convert -- convert all semsim profiles into exomiser SQL format"
	@echo "make semsim-ingest -- takes all the configured semsim profiles and loads them into the exomiser databases"

	@echo "make clean -- removes corpora and pheval results"
	@echo "make help -- show this help"
	@echo ""

status:
	@echo "Project: $(NAME)"
	@echo "Version: $(VERSION)"

.SECONDEXPANSION:

.PHONY: pheval
pheval: prepare-inputs $$(prepare-corpus) $$(pheval-run)


{% for config in configs %}

configurations/{{ config.tool }}-{{ config.version }}-{{ config.configuration }}/config.yaml:
	mkdir -p $(shell dirname pwd)/$(shell dirname $@)
	ln -s {{ directories[config.tool] }}/* $(shell dirname pwd)/$(shell dirname $@)


{% if config.tool == 'exomiser' %}
configurations/{{ config.tool }}-{{ config.version }}/{{ config.configuration }}/{{ phenotype.version }}_phenotype/{{ phenotype.version }}_phenotype.h2.db: configurations/{{ config.tool }}-{{ config.version }}-{{ config.configuration }}/config.yaml configurations/{{ config.configuration }}/hp-mp.semsim.{{ config.configuration }}.sql configurations/{{ config.configuration }}/hp-mp2.semsim.{{ config.configuration }}.sql
	test -d {{ config.configuration }}/hp-mp-semsim.{{ config.configuration }} || cp -rf configurations/{{ config.tool }}-{{ config.version }}/{{ config.configuration }}/{{ phenotype.version }}_phenotype/hp-mp-semsim.{{ config.configuration }}
	java -cp $(H2_JAR) org.h2.tools.RunScript -user sa -url jdbc:h2:/configurations/{{ config.tool }}-{{ config.version }}/{{ config.configuration }}/hp-mp-semsim.{{ config.configuration }}/{{ phenotype.version }}_phenotype -script configurations/{{ config.configuration }}/hp-mp.semsim.{{ config.configuration }}.sql

.PHONY: semsim-ingest
semsim-ingest: configurations/{{ config.tool }}-{{ config.version }}/{{ config.configuration }}/{{ phenotype.version }}_phenotype/{{ phenotype.version }}_phenotype.h2.db

{% endif %}

.PHONY: prepare-inputs
prepare-inputs: configurations/{{ config.tool }}-{{ config.version }}-{{ config.configuration }}/config.yaml
	echo prepare-inputs $*

{% endfor %}

{% for run in runs %}
results/{{ run.tool }}-{{ run.version }}/{{ run.configuration }}-{{ run.corpus }}-{{ run.corpusvariant }}/results.yml: configurations/{{ run.tool }}-{{ run.version }}-{{ run.configuration }}/config.yaml
	
	pheval run \
	 --input-dir {{ directories.config }}/{{ run.tool }}-{{ run.version }}-{{ run.configuration }} \
	 --testdata-dir $(shell pwd)/corpora/{{ run.corpus }}/{{ run.corpusvariant }} \
	 --runner {{ run.tool }}phevalrunner \
	 --tmp-dir {{ directories.tmp }}/ \
	 --output-dir $(shell dirname pwd)/$(shell dirname $@) \
	 --config $<
	
	touch $@


corpora/{{ run.corpus }}/{{ run.corpusvariant }}/corpus.yml: $(TEST_DATA)/template_vcf/template_exome_hg19.vcf.gz
	test -d $(shell dirname $@)/vcf || mkdir -p $(shell dirname $@)/vcf
	test -d $(shell dirname $@)/phenopackets || mkdir -p $(shell dirname $@)/phenopackets
	test -L $(shell pwd)/corpora/{{ run.corpus }}/{{ run.corpusvariant }}/template_exome_hg19.vcf.gz || ln -s $(shell pwd)/$< $(shell dirname $@)/vcf/
	

.PHONY: prepare-corpus
prepare-corpus +=  corpora/{{ run.corpus }}/{{ run.corpusvariant }}/corpus.yml



run-{{ run.corpus }}-{{ run.tool }}:
	$(MAKE) SCRAMBLE_FACTOR=1 results/{{ run.tool }}-{{ run.version }}/{{ run.configuration }}-{{ run.corpus }}-{{ run.corpusvariant }}/results.yml

pheval-run += run-{{ run.corpus }}-{{ run.tool }}

{% endfor %}


.PHONY: clean
clean:
	rm -rf data/* corpora/* inputs/* configurations/* results/*

include ./resources/custom.Makefile